#!/usr/bin/env python

import re
import subprocess
import sys

ROOT = '/apps/gnome-terminal/profiles/Default/'
THEMES = {
    'black': [
        '000000',
        'FFFFFF',

        '000000',
        'D31112',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        'EEE8D5',

        '204B56',
        'FB2B16',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        'FDF6E3',
    ],
    'white': [
        'FFFFFF',
        '000000',

        'FFFFFF',
        'D31112',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        '000000',

        '204B56',
        'CB4B16',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        '111111',
    ],
    'solarized-ish-dark': [
        '002B36',
        '657B83',

        '063642',
        'D30102',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        'EEE8D5',

        '000000',
        'CB4B16',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        'FDF6E3',
    ],
    'solarized-ish-light': [
        'FDF6E3',
        '536466',

        'EEE8D5',
        'D30102',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        '073642',

        'FDF6E3',
        'CB4B16',
        '859900',
        'B58900',
        '268BD2',
        'D33682',
        '2AA198',
        '002B36',
    ],
}
THEMES['light'] = THEMES['solarized-ish-light']
THEMES['dark'] = THEMES['solarized-ish-dark']

reset_seq = '\033[0m'

def gconf_get(path):
    args = ['gconftool-2', '--get', path]
    process = subprocess.Popen(args, stdout=subprocess.PIPE)
    out, err = process.communicate()
    return out.strip()

def gconf_set(path, type, value):
    subprocess.call(['gconftool-2', '--set', path, '--type', type, value])

def join_colors(theme, a, b):
    return '#' + ':#'.join(theme[a:b])

def set_theme(theme):
    gconf_set(ROOT + 'use_theme_background', 'bool', 'false')
    gconf_set(ROOT + 'use_theme_colors', 'bool', 'false')
    gconf_set(ROOT + 'background_color', 'string', join_colors(theme, 0, 1))
    gconf_set(ROOT + 'foreground_color', 'string', join_colors(theme, 1, 2))
    gconf_set(ROOT + 'palette', 'string', join_colors(theme, 2, 18))

def set_font_size(size=16, relative=None):
    font = gconf_get(ROOT + 'font')
    if relative:
        size = int(re.match(r'.*?(\d+)$', font).group(1)) + relative
    if size < 10:
        size = 10
    if size > 32:
        size = 32
    font = re.sub(r'\d+$', str(size), font)
    gconf_set(ROOT + 'font', 'string', font)

def show_table():
    for i in range(2):
        for j in range(30, 38):
            for k in range(40, 48):
                sys.stdout.write(
                        '\33[%d;%d;%dm%d;%d;%d\33[m ' % (i, j, k, i, j, k))
            sys.stdout.write("\n")

def hrun(start, width, pad=0):
    return [None] * pad + list(range(start, start + width)) + [None] * pad

def vrun(start, width, height, padding=0):
    return [hrun(s, width, padding)
            for s in range(start, start + width * height, width)]

def color_bar(seq, color, trail):
    if color is None:
        return '%s    %s' % (reset_seq, trail)
    return '%s %03d%s' % (seq(color), color, trail)

# Adapted from from https://gist.github.com/mgedmin/2762225 .
def show_all_colors():
    layout = [
        vrun(0, 8, 2),                # 16 standard xterm colors
        vrun(16, 6, 6 * 6, 1),        # 6x6x6 color cube
        vrun(16 + 6 * 6 * 6, 8, 3),   # 24 grey levels
    ]
    bg_seq = lambda color: '\033[48;5;%dm' % color
    fg_seq = lambda color: '\033[38;5;%dm' % color

    for block in layout:
        print("")
        for row in block:
            fg_bar = ''.join(color_bar(fg_seq, color, '') for color in row)
            bg_bar = ''.join(color_bar(bg_seq, color, ' ') for color in row)
            print('%s%s    %s%s' % (fg_bar, reset_seq, bg_bar, reset_seq))

def main():
    arg = sys.argv[1]
    if re.match(r'^\d+$', arg):
        set_font_size(int(arg))
    elif re.match(r'^(-+|\++)$', arg):
        size = len(arg) * -1 if arg[0] == '-' else 1
        set_font_size(relative=size)
    elif re.match(r'^[-+]\d+$', arg):
        set_font_size(relative=int(arg))
    elif re.match(r'^table$', arg):
        show_table()
    elif re.match(r'^all$', arg):
        show_all_colors()
    else:
        set_theme(THEMES[arg])

if __name__ == '__main__':
    main()
